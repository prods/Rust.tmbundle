<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>Rust Syntax: version 0.1</string>
	<key>fileTypes</key>
	<array>
		<string>rs</string>
		<string>jc</string>
	</array>
	<key>foldingStartMarker</key>
	<string>^.*\bfn\s*(\w+\s*)?\([^\)]*\)(\s*\{[^\}]*)?\s*$</string>
	<key>foldingStopMarker</key>
	<string>^\s*\}</string>
	<key>name</key>
	<string>Rust</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.class.rs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.constant.rs</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.rs</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>match stuff like: Sound.prototype = { … } when extending an object</string>
			<key>match</key>
			<string>([a-zA-Z_?.$][\w?.$]*)\.(prototype)\s*(=)\s*</string>
			<key>name</key>
			<string>meta.class.rs</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.fn.rs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.fn.rs</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.rs</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.fn.rs</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.rs</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>match regular fn like: fn myFunc(arg : type,...) { … }</string>
			<key>match</key>
			<string>\b(fn)\s+([a-zA-Z_$]\w*)?\s*(\()((.*?)\s?\:\s?(.*?))?(\))</string>
			<key>name</key>
			<string>meta.fnargs.rs</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.fn.rs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.fn.rs</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.rs</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.fn.rs</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.rs</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>match regular fn like: fn myFunc(arg) { … }</string>
			<key>match</key>
			<string>\b(fn)\s+([a-zA-Z_$]\w*)?\s*(\()(?!\:.*?)(\))</string>
			<key>name</key>
			<string>meta.fn.rs</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.fn.rs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.fn.rs</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.rs</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.fn.rs</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.rs</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>match regular fn like: fn myFunc(arg) { … }</string>
			<key>match</key>
			<string>\b(mod|enum)\s+([a-zA-Z_$]\w*)?\s?\{</string>
			<key>name</key>
			<string>meta.extras.rs</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.new.rs</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.instance.rs</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(new)\s+(\w+(?:\.\w*)?)</string>
			<key>name</key>
			<string>meta.class.instance.constructor</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b</string>
			<key>name</key>
			<string>constant.numeric.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\s?(\#([a-zA-Z]+))</string>
			<key>name</key>
			<string>constant.special.rs</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.rs</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.rs</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.rs</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
					<key>name</key>
					<string>constant.character.escape.rs</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.rs</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.rs</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.rs</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(x\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
					<key>name</key>
					<string>constant.character.escape.rs</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*\*(?!/)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.rs</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.documentation.rs</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.rs</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.rs</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.rs</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(//).*$\n?</string>
			<key>name</key>
			<string>comment.line.double-slash.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(bool|byte|char|class|double|enum|float|f([0-9]+)|fn|int|use|uint|([0-9]+)i|([0-9]+)u|u([0-9]+)|i([0-9]+)|iface|impl|interface|long|type|short|ret|resource|str|var|mod|native|let|void)\b</string>
			<key>name</key>
			<string>storage.type.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(const|export|extends|final|implements|native|private|protected|public|static|synchronized|throws|transient|volatile|mut|pub)\b</string>
			<key>name</key>
			<string>storage.modifier.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(\||break|alt|catch|continue|default|do|else|finally|for|to|if|import|package|return|switch|throw|try|while)\b</string>
			<key>name</key>
			<string>keyword.control.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(delete|in|instanceof|new|typeof|with|as|box)\b</string>
			<key>name</key>
			<string>keyword.operator.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\btrue\b</string>
			<key>name</key>
			<string>constant.language.boolean.true.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bfalse\b</string>
			<key>name</key>
			<string>constant.language.boolean.false.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bnull\b</string>
			<key>name</key>
			<string>constant.language.null.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(self|super)\b</string>
			<key>name</key>
			<string>variable.language.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(log,assert)\b</string>
			<key>name</key>
			<string>keyword.other.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(std|str|io|float|consts|crypto|vec|unsafe|ptr)\b</string>
			<key>name</key>
			<string>support.class.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(s(h(ift|ow(Mod(elessDialog|alDialog)|Help))|croll(X|By(Pages|Lines)?|Y|To)?|t(op|rike)|i(n|zeToContent|debar|gnText)|ort|u(p|b(str(ing)?)?)|pli(ce|t)|e(nd|t(Re(sizable|questHeader)|M(i(nutes|lliseconds)|onth)|Seconds|Ho(tKeys|urs)|Year|Cursor|Time(out)?|Interval|ZOptions|Date|UTC(M(i(nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(ome|andleEvent)|navigate|c(har(CodeAt|At)|o(s|n(cat|textual|firm)|mpile)|eil|lear(Timeout|Interval)?|a(ptureEvents|ll)|reate(StyleSheet|Popup|EventObject))|t(o(GMTString|S(tring|ource)|U(TCString|pperCase)|Lo(caleString|werCase))|est|a(n|int(Enabled)?))|i(s(NaN|Finite)|ndexOf|talics)|d(isableExternalCapture|ump|etachEvent)|u(n(shift|taint|escape|watch)|pdateCommands)|j(oin|avaEnabled)|p(o(p|w)|ush|lugins.refresh|a(ddings|rse(Int|Float)?)|r(int|ompt|eference))|e(scape|nableExternalCapture|val|lementFromPoint|x(p|ec(Script|Command)?))|valueOf|UTC|queryCommand(State|Indeterm|Enabled|Value)|f(i(nd|le(ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(nt(size|color)|rward)|loor|romCharCode)|watch|l(ink|o(ad|g)|astIndexOf)|a(sin|nchor|cos|t(tachEvent|ob|an(2)?)|pply|lert|b(s|ort))|r(ou(nd|teEvents)|e(size(By|To)|calc|turnValue|place|verse|l(oad|ease(Capture|Events)))|andom)|g(o|et(ResponseHeader|M(i(nutes|lliseconds)|onth)|Se(conds|lection)|Hours|Year|Time(zoneOffset)?|Da(y|te)|UTC(M(i(nutes|lliseconds)|onth)|Seconds|Hours|Da(y|te)|FullYear)|FullYear|A(ttention|llResponseHeaders)))|m(in|ove(B(y|elow)|To(Absolute)?|Above)|ergeAttributes|a(tch|rgins|x))|b(toa|ig|o(ld|rderWidths)|link|ack))\b(?=\()</string>
			<key>name</key>
			<string>support.fn.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;=\.)(s(ystemLanguage|cr(ipts|ollbars|een(X|Y|Top|Left))|t(yle(Sheets)?|atus(Text|bar)?)|ibling(Below|Above)|ource|uffixes|e(curity(Policy)?|l(ection|f)))|h(istory|ost(name)?|as(h|Focus))|y|X(MLDocument|SLDocument)|n(ext|ame(space(s|URI)|Prop))|M(IN_VALUE|AX_VALUE)|c(haracterSet|o(n(structor|trollers)|okieEnabled|lorDepth|mp(onents|lete))|urrent|puClass|l(i(p(boardData)?|entInformation)|osed|asses)|alle(e|r)|rypto)|t(o(olbar|p)|ext(Transform|Indent|Decoration|Align)|ags)|SQRT(1_2|2)|i(n(ner(Height|Width)|put)|ds|gnoreCase)|zIndex|o(scpu|n(readystatechange|Line)|uter(Height|Width)|p(sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(i(splay|alog(Height|Top|Width|Left|Arguments)|rectories)|e(scription|fault(Status|Ch(ecked|arset)|View)))|u(ser(Profile|Language|Agent)|n(iqueID|defined)|pdateInterval)|_content|p(ixelDepth|ort|ersonalbar|kcs11|l(ugins|atform)|a(thname|dding(Right|Bottom|Top|Left)|rent(Window|Layer)?|ge(X(Offset)?|Y(Offset)?))|r(o(to(col|type)|duct(Sub)?|mpter)|e(vious|fix)))|e(n(coding|abledPlugin)|x(ternal|pando)|mbeds)|v(isibility|endor(Sub)?|Linkcolor)|URLUnencoded|P(I|OSITIVE_INFINITY)|f(ilename|o(nt(Size|Family|Weight)|rmName)|rame(s|Element)|gColor)|E|whiteSpace|l(i(stStyleType|n(eHeight|kColor))|o(ca(tion(bar)?|lName)|wsrc)|e(ngth|ft(Context)?)|a(st(M(odified|atch)|Index|Paren)|yer(s|X)|nguage))|a(pp(MinorVersion|Name|Co(deName|re)|Version)|vail(Height|Top|Width|Left)|ll|r(ity|guments)|Linkcolor|bove)|r(ight(Context)?|e(sponse(XML|Text)|adyState))|global|x|m(imeTypes|ultiline|enubar|argin(Right|Bottom|Top|Left))|L(N(10|2)|OG(10E|2E))|b(o(ttom|rder(Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(Color|Image)))\b</string>
			<key>name</key>
			<string>support.constant.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>!|\$|%|&amp;|@|\*|\-\-|\-|\+\+|\+|~|--&gt;|===|==|=|!=|!==|&lt;=|&gt;=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|&lt;&gt;|&lt;|&gt;|!|&amp;&amp;|\|\||\?\:|\*=|(?&lt;!\()/=|%=|\+=|\-=|&amp;=|\^=|\b(in|instanceof|new|delete|typeof|void)\b</string>
			<key>name</key>
			<string>keyword.operator.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(Infinity|NaN|undefined)\b</string>
			<key>name</key>
			<string>constant.language.rs</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;=[=(:]|^|ret)\s*(/)(?![/*+{}?])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.rs</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(/)[igm]*</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.rs</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.regexp.rs</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.rs</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\;</string>
			<key>name</key>
			<string>punctuation.terminator.statement.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>,[ |\t]*</string>
			<key>name</key>
			<string>meta.delimiter.object.comma.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\.</string>
			<key>name</key>
			<string>meta.delimiter.method.period.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\{|\}</string>
			<key>name</key>
			<string>meta.brace.curly.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\(|\)</string>
			<key>name</key>
			<string>meta.brace.round.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\[|\]</string>
			<key>name</key>
			<string>meta.brace.square.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(#)[a-zA-Z][a-zA-Z0-9_-]*</string>
			<key>name</key>
			<string>meta.fn.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(use)\s+(\w+)</string>
			<key>name</key>
			<string>meta.use.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(import)\s+(\w+)((::)?(\w+)?)</string>
			<key>name</key>
			<string>meta.import.rs</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(println)\b</string>
			<key>name</key>
			<string>entity.mod.fn.rs</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.rs</string>
	<key>uuid</key>
	<string>E54FA931-0668-4496-8922-F91520AD02B3</string>
</dict>
</plist>
